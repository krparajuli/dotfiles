# Open a new pane or window with the current directory of the current pane, not the directory in which the first tmux session was started.
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
bind v  split-window -h -c "#{pane_current_path}"
bind h split-window -v -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",*256col*:Tc"

# change C-b to C-a
# unbind C-b
# set -g prefix C-a
# bind C-a send-prefix
# bind-key C-a send-prefix
# bind r source-file ~/.tmux.conf

# Secondary prefix # C-i makes you do tab twice in terminal
# jset -g prefix2 C-i
# bind-key C-i send-prefix -2

#  Use vi key bindings in tmux. 
set -g mode-keys vi
# set things up so that v starts a selection and y finishes it in the same way that Space and Enter do, more like Vim:
bind-key -T copy-mode-vi 'v' send -X begin-selection
# bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel
bind -T copy-mode-vi y send -X copy-pipe "xclip -selection c"
# bind -t vi-copy y copy-pipe 'pbcopy' # for MacOS

# Start window numbering at 1
set -g base-index 1

# Others 
set -g mouse on

######################
### DESIGN CHANGES ###
######################

# loud or quiet?
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none

#  modes
setw -g clock-mode-colour colour135
setw -g mode-style 'fg=colour196 bg=colour238 bold'

# panes
set -g pane-border-style 'fg=colour238 bg=colour235'
set -g pane-active-border-style 'fg=colour208 bg=colour236'

# statusbar
set -g status-position bottom
set -g status-justify left
set -g status-style 'bg=colour166 fg=colour131 dim'
# set -g status-style 'bg=colour234 fg=colour131 dim'
set -g status-interval 2
set -g status-left ''
# set -g status-right '#{prefix_highlight} #(gitmux #{pane_current_path}) #[fg=colour233,bg=colour245,bold] %H:%M:%S '
set -g status-right '#{prefix_highlight} #[fg=colour231,bg=colour04]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default] #[fg=colour233,bg=colour245,bold] %H:%M:%S '
# set -g status-right '#[fg=colour233,bg=colour241,bold] %d/%m #[fg=colour233,bg=colour245,bold] %H:%M:%S '
set -g status-right-length 50
set -g status-left-length 20

setw -g window-status-current-style 'fg=colour172 bg=colour238 bold'
# setw -g window-status-current-format ' #I#[fg=colour249]:#[fg=colour255]#W#[fg=colour249]#F '
setw -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour226]#F '

setw -g window-status-style 'fg=colour138 bg=colour235 none'
# setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

setw -g window-status-bell-style 'fg=colour255 bg=colour1 bold'

# messages
set -g message-style 'fg=colour232 bg=colour166 bold'
set -g message-command-style 'fg=blue bg=black'

#####################################################
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

# Sends C-(whatever) to vim if in vim, then select respective pane if not
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# ========= switch VIM panes ======================
# vim will take care of this; want to save emacs behavior in shell
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'
# bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'
# bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'
# bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'

# ========= swtich NON-vim panes ====================
bind-key 'C-h' 'select-pane -L'
bind-key 'C-j' 'select-pane -D'
bind-key 'C-k' 'select-pane -U'
bind-key 'C-l' 'select-pane -R'
# switch panes using Alt-arrow without prefix
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D
# ===================================================

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"


#============================================================
#             PLUGINS
#============================================================
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Custom plugins
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

